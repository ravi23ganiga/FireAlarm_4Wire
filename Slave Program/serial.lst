C51 COMPILER V8.05a   SERIAL                                                               09/23/2013 20:48:50 PAGE 1   


C51 COMPILER V8.05a, COMPILATION OF MODULE SERIAL
OBJECT MODULE PLACED IN serial.obj
COMPILER INVOKED BY: D:\Keil\C51\BIN\C51.EXE board\src\serial.c BROWSE INCDIR(.\include) DEBUG OBJECTEXTEND PRINT(.\seri
                    -al.lst) OBJECT(serial.obj)

line level    source

   1          #include "global.h"
   2          
   3          void SerialInit()
   4          {
   5   1              TR1     = TRUE;  
   6   1              SCON    = 0xD0; 
   7   1              REN     = TRUE;
   8   1              SM2             = TRUE;
   9   1              MAX485_TX       = RECEIVE;
  10   1              System.Serial.ucpRxBuff = &System.QueryStruct.ucmStartByte;
  11   1              System.Serial.ucmRxLength = sizeof(System.QueryStruct); 
  12   1              System.Serial.enRxStatus = RX_ADDRESS;
  13   1      }
  14          
  15          void SendData(UC *ucpData, UC ucmLength)//, TagFnTxFunc fnTxFunc, void* vTxData)
  16          {
  17   1              UC ucmData;
  18   1              System.Serial.enTxComplete      = SENDING;
  19   1              //System.Serial.fnTxFunc                = fnTxFunc;
  20   1              //System.Serial.vTxData                 = vTxData;
  21   1              System.Serial.ucpDataPtr        = ucpData;
  22   1              System.Serial.ucmTxLength       = ucmLength - 1;
  23   1              ucmData = *(System.Serial.ucpDataPtr); 
  24   1              System.Serial.ucpDataPtr++;
  25   1              if(TI EQ TRUE)
  26   1              {
  27   2                      TI = FALSE;
  28   2              }
  29   1              SBUF = ucmData; 
  30   1      } 
  31          /*
  32          void RecData(UC *ucpData, UC ucmDataLength, UC ucmTimeout)//, TagFnRxFunc fnRxFunc, void* vRxData , UC ucm
             -RxContinuous)
  33          {
  34                  System.Serial.ucpRxBuff         = ucpData;
  35                  System.Serial.ucmRxLength       = ucmDataLength;
  36                  System.Serial.ucmRxNdx          = 0;    
  37                  //System.Serial.fnRxFunc                = fnRxFunc;
  38                  //System.Serial.vRxData                 = vRxData;
  39                  System.Serial.usmRxWaitTimeout = ucmTimeout;// * 1000;
  40                  if(RI EQ TRUE)
  41                  {
  42                          RI = FALSE;
  43                  }
  44          //      System.Serial.bitRxContinuous = ucmRxContinuous;
  45                  System.Serial.enRxStatus = RX_MONITORING;
  46                  REN = TRUE;
  47          }
  48          */
  49          /*
  50          void SendAddress()
  51          {
  52                  TB8 = TRUE; 
  53                  SendData(&System.Serial.ucmQueryAddress,sizeof(UC));//,0, 0);
C51 COMPILER V8.05a   SERIAL                                                               09/23/2013 20:48:50 PAGE 2   

  54          }
  55          */
  56          void SendResponse()
  57          { 
  58   1      //      Delay(100);
  59   1              TB8 = FALSE;
  60   1              System.QueryStruct.ucmStartByte = 0xA5;
  61   1              System.QueryStruct.ucmEndByte   = 0x5A;
  62   1              SendData(&System.QueryStruct.ucmStartByte,sizeof(System.QueryStruct));//, 0, 0);
  63   1      }
  64          /*
  65          void ReceiveResponse()
  66          {
  67                  RecData(&System.QueryStruct.ucmStartByte,sizeof(System.QueryStruct), RESPONSE_TIMEOUT);
  68          }
  69          */
  70          /*
  71          void QuerySendFinished(void* vData)
  72          { 
  73                  return;
  74          }
  75          
  76          void QueryReceiveFinished(void* vData, TagenRxStatus enRxStatus)
  77          {
  78                  return;
  79          }
  80            */


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =     82    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
